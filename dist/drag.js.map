{"version":3,"file":"drag.js","sources":["../src/utils.ts","../src/Dragger.ts","../src/drag.ts"],"sourcesContent":["import { Client, Position } from \"./types\";\nimport { IArrayFormat } from \"@daybrush/utils\";\n\nexport function getPinchDragPosition(\n    clients: Client[],\n    prevClients: Client[],\n    startClients: Client[],\n    startPinchClients: Client[],\n) {\n    const nowCenter = getAverageClient(clients);\n    const prevCenter = getAverageClient(prevClients);\n    const startCenter = getAverageClient(startPinchClients);\n    const pinchClient = getAddClient(startPinchClients[0], getMinusClient(nowCenter, startCenter));\n    const pinchPrevClient = getAddClient(startPinchClients[0], getMinusClient(prevCenter, startCenter));\n\n    return getPosition(pinchClient, pinchPrevClient, startClients[0]);\n}\nexport function isMultiTouch(e: any): e is TouchEvent {\n    return e.touches && e.touches.length >= 2;\n}\nexport function getPositionEvent(e: any): Client[] {\n    if (e.touches) {\n        return getClients(e.touches);\n    } else {\n        return [getClient(e)];\n    }\n}\nexport function getPosition(client: Client, prevClient: Client, startClient: Client): Position {\n    const { clientX, clientY } = client;\n    const {\n        clientX: prevX,\n        clientY: prevY,\n    } = prevClient;\n\n    const {\n        clientX: startX,\n        clientY: startY,\n    } = startClient;\n    const deltaX = clientX - prevX;\n    const deltaY = clientY - prevY;\n    const distX = clientX - startX;\n    const distY = clientY - startY;\n\n    return {\n        clientX,\n        clientY,\n        deltaX,\n        deltaY,\n        distX,\n        distY,\n    };\n}\nexport function getDist(clients: Client[]) {\n    return Math.sqrt(\n        Math.pow(clients[0].clientX - clients[1].clientX, 2)\n        + Math.pow(clients[0].clientY - clients[1].clientY, 2),\n    );\n}\nexport function getPositions(clients: Client[], prevClients: Client[], startClients: Client[]): Position[] {\n    return clients.map((client, i) => getPosition(client, prevClients[i], startClients[i]));\n}\nexport function getClients(touches: IArrayFormat<Touch>) {\n    const length = Math.min(touches.length, 2);\n    const clients = [];\n\n    for (let i = 0; i < length; ++i) {\n        clients.push(getClient(touches[i]));\n    }\n    return clients;\n}\nexport function getClient(e: MouseEvent | Touch): Client {\n    return {\n        clientX: e.clientX,\n        clientY: e.clientY,\n    };\n}\nexport function getAverageClient(clients: Client[]) {\n    return {\n        clientX: (clients[0].clientX + clients[1].clientX) / 2,\n        clientY: (clients[0].clientY + clients[1].clientY) / 2,\n    };\n}\nexport function getAddClient(client1: Client, client2: Client) {\n    return {\n        clientX: (client1.clientX + client2.clientX),\n        clientY: (client1.clientY + client2.clientY),\n    };\n}\n\nexport function getMinusClient(client1: Client, client2: Client) {\n    return {\n        clientX: (client1.clientX - client2.clientX),\n        clientY: (client1.clientY - client2.clientY),\n    };\n}\n","import { DragOptions, Client, Position } from \"./types\";\nimport {\n    getPositionEvent, getPosition, getClients, getPositions,\n    isMultiTouch, getPinchDragPosition, getAverageClient, getDist,\n} from \"./utils\";\nimport { addEvent, removeEvent } from \"@daybrush/utils\";\n\nexport default class Dragger {\n    public options: DragOptions = {};\n    private flag = false;\n    private pinchFlag = false;\n    private datas = {};\n    private isDrag = false;\n    private isPinch = false;\n    private isMouse = false;\n    private isTouch = false;\n    private prevClients: Client[] = [];\n    private startClients: Client[] = [];\n    private movement: number = 0;\n    private startPinchClients: Client[] = [];\n    private startDistance: number = 0;\n\n    constructor(private el: Element, options: DragOptions = {}) {\n        this.options = {\n            container: el,\n            preventRightClick: true,\n            pinchThreshold: 0,\n            events: [\"touch\", \"mouse\"],\n            ...options,\n        };\n\n        const { container, events } = this.options;\n\n        this.isTouch = events!.indexOf(\"touch\") > -1;\n        this.isMouse = events!.indexOf(\"mouse\") > -1;\n\n        if (this.isMouse) {\n            addEvent(el, \"mousedown\", this.onDragStart);\n            addEvent(container!, \"mousemove\", this.onDrag);\n            addEvent(container!, \"mouseup\", this.onDragEnd);\n        }\n        if (this.isTouch) {\n            addEvent(el, \"touchstart\", this.onDragStart);\n            addEvent(container!, \"touchmove\", this.onDrag);\n            addEvent(container!, \"touchend\", this.onDragEnd);\n        }\n    }\n    public isDragging() {\n        return this.isDrag;\n    }\n    public isPinching() {\n        return this.isPinch;\n    }\n    public onDragStart = (e: any) => {\n        if (!this.flag && e.cancelable === false) {\n            return;\n        }\n        if (isMultiTouch(e)) {\n            if (!this.flag && (e.touches.length !== e.changedTouches.length)) {\n                return;\n            }\n            if (!this.pinchFlag) {\n                this.onPinchStart(e);\n            }\n        }\n        if (this.flag) {\n            return;\n        }\n        const clients = this.startClients[0] ? this.startClients : getPositionEvent(e);\n\n        this.flag = true;\n        this.isDrag = false;\n        this.startClients = clients;\n        this.prevClients = clients;\n        this.datas = {};\n        this.movement = 0;\n\n        const position = getPosition(clients[0], this.prevClients[0], this.startClients[0]);\n\n        const {\n            dragstart,\n            preventRightClick,\n        } = this.options;\n\n        if (\n            (preventRightClick && e.which === 3)\n            || (dragstart && dragstart({\n                datas: this.datas,\n                inputEvent: e,\n                ...position,\n            })) === false) {\n            this.startClients = [];\n            this.prevClients = [];\n            this.flag = false;\n        }\n        this.flag && e.preventDefault();\n    }\n    public onDrag = (e: any) => {\n        if (!this.flag) {\n            return;\n        }\n        const clients = getPositionEvent(e);\n\n        if (this.pinchFlag) {\n            this.onPinch(e, clients);\n        }\n        const prevClients = this.prevClients;\n        const startClients = this.startClients;\n        const position: Position = this.pinchFlag\n            ? getPinchDragPosition(clients, prevClients, startClients, this.startPinchClients)\n            : getPosition(clients[0], prevClients[0], startClients[0]);\n\n        const { deltaX, deltaY } = position;\n        if (!deltaX && !deltaY) {\n            return;\n        }\n        this.movement += Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n        this.isDrag = true;\n\n        const drag = this.options.drag;\n        drag && drag({\n            datas: this.datas,\n            ...position,\n            inputEvent: e,\n        });\n        this.prevClients = clients;\n    }\n    public onDragEnd = (e: any) => {\n        if (!this.flag) {\n            return;\n        }\n        if (this.pinchFlag) {\n            this.onPinchEnd(e);\n        }\n        this.flag = false;\n\n        const dragend = this.options.dragend;\n        const prevClients = this.prevClients;\n        const startClients = this.startClients;\n\n        const position: Position = this.pinchFlag\n            ? getPinchDragPosition(prevClients, prevClients, startClients, this.startPinchClients)\n            : getPosition(prevClients[0], prevClients[0], startClients[0]);\n\n        this.startClients = [];\n        this.prevClients = [];\n        dragend && dragend({\n            datas: this.datas,\n            isDrag: this.isDrag,\n            inputEvent: e,\n            ...position,\n        });\n    }\n    public onPinchStart(e: TouchEvent) {\n        const { pinchstart, pinchThreshold } = this.options;\n\n        if (this.isDrag && this.movement > pinchThreshold!) {\n            return;\n        }\n        const pinchClients = getClients(e.changedTouches);\n\n        this.pinchFlag = true;\n        this.startClients.push(...pinchClients);\n        this.prevClients.push(...pinchClients);\n        this.startDistance = getDist(this.prevClients);\n        this.startPinchClients = [...this.prevClients];\n\n        if (!pinchstart) {\n            return;\n        }\n        const startClients = this.prevClients;\n        const startAverageClient = getAverageClient(startClients);\n        const centerPosition = getPosition(\n            startAverageClient,\n            startAverageClient,\n            startAverageClient,\n        );\n        pinchstart({\n            datas: this.datas,\n            touches: getPositions(startClients, startClients, startClients),\n            ...centerPosition,\n            inputEvent: e,\n        });\n    }\n    public onPinch(e: TouchEvent, clients: Client[]) {\n        if (!this.flag || !this.pinchFlag) {\n            return;\n        }\n        this.isPinch = true;\n\n        const pinch = this.options.pinch;\n        if (!pinch) {\n            return;\n        }\n        const prevClients = this.prevClients;\n        const startClients = this.startClients;\n        const centerPosition = getPosition(\n            getAverageClient(clients),\n            getAverageClient(prevClients),\n            getAverageClient(startClients),\n        );\n        const distance = getDist(clients);\n        pinch({\n            datas: this.datas,\n            touches: getPositions(clients, prevClients, startClients),\n            scale: distance / this.startDistance,\n            distance,\n            ...centerPosition,\n            inputEvent: e,\n        });\n    }\n    public onPinchEnd(e: TouchEvent) {\n        if (!this.flag || !this.pinchFlag) {\n            return;\n        }\n        const isPinch = this.isPinch;\n\n        this.isPinch = false;\n        this.pinchFlag = false;\n        const pinchend = this.options.pinchend;\n\n        if (!pinchend) {\n            return;\n        }\n        const prevClients = this.prevClients;\n        const startClients = this.startClients;\n        const centerPosition = getPosition(\n            getAverageClient(prevClients),\n            getAverageClient(prevClients),\n            getAverageClient(startClients),\n        );\n        pinchend({\n            datas: this.datas,\n            isPinch,\n            touches: getPositions(prevClients, prevClients, startClients),\n            ...centerPosition,\n            inputEvent: e,\n        });\n        this.isPinch = false;\n        this.pinchFlag = false;\n    }\n    public unset() {\n        const el = this.el;\n        const container = this.options.container!;\n\n        if (this.isMouse) {\n            removeEvent(el, \"mousedown\", this.onDragStart);\n            removeEvent(container as any, \"mousemove\", this.onDrag);\n            removeEvent(container as any, \"mouseup\", this.onDragEnd);\n        }\n        if (this.isTouch) {\n            removeEvent(el, \"touchstart\", this.onDragStart);\n            removeEvent(container as any, \"touchmove\", this.onDrag);\n            removeEvent(container as any, \"touchend\", this.onDragEnd);\n        }\n    }\n}\n","import Dragger from \"./Dragger\";\nimport { DragOptions } from \"./types\";\n\nexport default function setDrag(el: Element, options: DragOptions) {\n    return new Dragger(el, options);\n}\n"],"names":["getPinchDragPosition","clients","prevClients","startClients","startPinchClients","nowCenter","getAverageClient","prevCenter","startCenter","pinchClient","getAddClient","getMinusClient","pinchPrevClient","getPosition","isMultiTouch","e","touches","length","getPositionEvent","getClients","getClient","client","prevClient","startClient","clientX","clientY","prevX","prevY","startX","startY","deltaX","deltaY","distX","distY","getDist","Math","sqrt","pow","getPositions","map","i","min","push","client1","client2","el","options","_this","flag","cancelable","changedTouches","pinchFlag","onPinchStart","isDrag","datas","movement","position","_a","dragstart","preventRightClick","which","inputEvent","preventDefault","onPinch","drag","onPinchEnd","dragend","container","pinchThreshold","events","isTouch","indexOf","isMouse","addEvent","onDragStart","onDrag","onDragEnd","isPinch","_c","pinchstart","pinchClients","_b","startDistance","startAverageClient","centerPosition","pinch","distance","scale","pinchend","removeEvent","setDrag","Dragger"],"mappings":"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"}