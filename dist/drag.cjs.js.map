{"version":3,"file":"drag.cjs.js","sources":["../src/utils.ts","../src/Dragger.ts","../src/drag.ts","../src/index.umd.ts"],"sourcesContent":["import { Client, Position } from \"./types\";\nimport { IArrayFormat } from \"@daybrush/utils\";\n\nexport function getPinchDragPosition(clients: Client[], prevClients: Client[], startClients: Client[]) {\n    const nowCenter = getAverageClient(clients);\n    const prevCenter = getAverageClient(prevClients);\n    const startCenter = getAverageClient(startClients);\n    const pinchClient = getAddClient(startClients[0], getMinusClient(nowCenter, startCenter));\n    const pinchPrevClient = getAddClient(startClients[0], getMinusClient(prevCenter, startCenter));\n\n    return getPosition(pinchClient, pinchPrevClient, startClients[0]);\n}\nexport function isMultiTouch(e: any): boolean {\n    return e.touches && e.touches.length >= 2;\n}\nexport function getPositionEvent(e: any): Client[] {\n    if (e.touches) {\n        return getClients(e.touches);\n    } else {\n        return [getClient(e)];\n    }\n}\nexport function getPosition(client: Client, prevClient: Client, startClient: Client): Position {\n    const { clientX, clientY } = client;\n    const {\n        clientX: prevX,\n        clientY: prevY,\n    } = prevClient;\n\n    const {\n        clientX: startX,\n        clientY: startY,\n    } = startClient;\n    const deltaX = clientX - prevX;\n    const deltaY = clientY - prevY;\n    const distX = clientX - startX;\n    const distY = clientY - startY;\n\n    return {\n        clientX,\n        clientY,\n        deltaX,\n        deltaY,\n        distX,\n        distY,\n    };\n}\nexport function getDist(clients: Client[]) {\n    return Math.sqrt(\n        Math.pow(clients[0].clientX - clients[1].clientX, 2)\n        + Math.pow(clients[0].clientY - clients[1].clientY, 2)\n    );\n}\nexport function getPositions(clients: Client[], prevClients: Client[], startClients: Client[]): Position[] {\n    return clients.map((client, i) => getPosition(client, prevClients[i], startClients[i]));\n}\nexport function getClients(touches: IArrayFormat<Touch>) {\n    const length = Math.min(touches.length, 2);\n    const clients = [];\n\n    for (let i = 0; i < length; ++i) {\n        clients.push(getClient(touches[i]));\n    }\n    return clients;\n}\nexport function getClient(e: MouseEvent | Touch): Client {\n    return {\n        clientX: e.clientX,\n        clientY: e.clientY,\n    };\n}\nexport function getAverageClient(clients: Client[]) {\n    return {\n        clientX: (clients[0].clientX + clients[1].clientX) / 2,\n        clientY: (clients[0].clientY + clients[1].clientY) / 2,\n    };\n}\nexport function getAddClient(client1: Client, client2: Client) {\n    return {\n        clientX: (client1.clientX + client2.clientX),\n        clientY: (client1.clientY + client2.clientY),\n    };\n}\n\nexport function getMinusClient(client1: Client, client2: Client) {\n    return {\n        clientX: (client1.clientX - client2.clientX),\n        clientY: (client1.clientY - client2.clientY),\n    };\n}\n","import { DragOptions, Client, Position } from \"./types\";\nimport {\n    getPositionEvent, getPosition, getClients, getPositions,\n    isMultiTouch, getPinchDragPosition, getAverageClient, getDist,\n} from \"./utils\";\nimport { addEvent, removeEvent } from \"@daybrush/utils\";\nimport { start } from \"repl\";\n\nexport default class Dragger {\n    public options: DragOptions = {};\n    private flag = false;\n    private pinchFlag = false;\n    private datas = {};\n    private isDrag = false;\n    private isPinch = false;\n    private isMouse = false;\n    private isTouch = false;\n    private prevClients: Client[] = [];\n    private startClients: Client[] = [];\n\n    constructor(private el: Element, options: DragOptions = {}) {\n        this.options = {\n            container: el,\n            preventRightClick: true,\n            events: [\"touch\", \"mouse\"],\n            ...options,\n        };\n\n        const { container, events } = this.options;\n\n        this.isTouch = events!.indexOf(\"touch\") > -1;\n        this.isMouse = events!.indexOf(\"mouse\") > -1;\n\n        if (this.isMouse) {\n            addEvent(el, \"mousedown\", this.onDragStart);\n            addEvent(container!, \"mousemove\", this.onDrag);\n            addEvent(container!, \"mouseup\", this.onDragEnd);\n        }\n        if (this.isTouch) {\n            addEvent(el, \"touchstart\", this.onDragStart);\n            addEvent(container!, \"touchmove\", this.onDrag);\n            addEvent(container!, \"touchend\", this.onDragEnd);\n        }\n    }\n    public isDragging() {\n        return this.isDrag;\n    }\n    public isPinching() {\n        return this.isPinch;\n    }\n    public onDragStart = (e: any) => {\n        if (!this.flag && e.cancelable === false) {\n            return;\n        }\n        if (!this.isDrag && isMultiTouch(e) && !this.pinchFlag) {\n            this.onPinchStart(e);\n        }\n        if (this.flag) {\n            return;\n        }\n        const clients = this.startClients[0] ? this.startClients : getPositionEvent(e);\n\n        this.flag = true;\n        this.isDrag = false;\n        this.startClients = clients;\n        this.prevClients = clients;\n        this.datas = {};\n\n        const position = getPosition(clients[0], this.prevClients[0], this.startClients[0]);\n\n        const {\n            dragstart,\n            preventRightClick,\n        } = this.options;\n\n        if (\n            (preventRightClick && e.which === 3)\n            || (dragstart && dragstart({\n                datas: this.datas,\n                inputEvent: e,\n                ...position,\n            })) === false) {\n            this.flag = false;\n        }\n        this.flag && e.preventDefault();\n    }\n    public onDrag = (e: any) => {\n        if (!this.flag) {\n            return;\n        }\n        const clients = getPositionEvent(e);\n\n        if (this.pinchFlag) {\n            this.onPinch(e, clients);\n        }\n        const prevClients = this.prevClients;\n        const startClients = this.startClients;\n        const position: Position = this.pinchFlag\n            ? getPinchDragPosition(clients, prevClients, startClients)\n            : getPosition(clients[0], prevClients[0], startClients[0]);\n\n        if (!position.deltaX && !position.deltaY) {\n            return;\n        }\n        this.isDrag = true;\n\n        const drag = this.options.drag;\n        drag && drag({\n            datas: this.datas,\n            ...position,\n            inputEvent: e,\n        });\n        this.prevClients = clients;\n    }\n    public onDragEnd = (e: any) => {\n        if (!this.flag) {\n            return;\n        }\n        if (this.pinchFlag) {\n            this.onPinchEnd(e);\n        }\n        this.flag = false;\n\n        const dragend = this.options.dragend;\n        const prevClients = this.prevClients;\n        const startClients = this.startClients;\n\n        const position: Position = this.pinchFlag\n            ? getPinchDragPosition(prevClients, prevClients, startClients)\n            : getPosition(prevClients[0], prevClients[0], startClients[0]);\n\n        this.startClients = [];\n        this.prevClients = [];\n        dragend && dragend({\n            datas: this.datas,\n            isDrag: this.isDrag,\n            inputEvent: e,\n            ...position,\n        });\n    }\n    public onPinchStart(e: TouchEvent) {\n        this.pinchFlag = true;\n\n        const pinchstart = this.options.pinchstart;\n\n        const pinchClients = getClients(e.changedTouches);\n\n        this.startClients.push(...pinchClients);\n        this.prevClients.push(...pinchClients);\n\n        if (!pinchstart) {\n            return;\n        }\n        const startClients = this.startClients;\n        const startAverageClient = getAverageClient(startClients);\n        const centerPosition = getPosition(\n            startAverageClient,\n            startAverageClient,\n            startAverageClient,\n        );\n        pinchstart({\n            datas: this.datas,\n            touches: getPositions(startClients, startClients, startClients),\n            ...centerPosition,\n            inputEvent: e,\n        });\n    }\n    public onPinch(e: TouchEvent, clients: Client[]) {\n        if (!this.flag || !this.pinchFlag) {\n            return;\n        }\n        this.isPinch = true;\n\n        const pinch = this.options.pinch;\n        if (!pinch) {\n            return;\n        }\n        const prevClients = this.prevClients;\n        const startClients = this.startClients;\n        const centerPosition = getPosition(\n            getAverageClient(clients),\n            getAverageClient(prevClients),\n            getAverageClient(startClients),\n        );\n        const distance = getDist(clients);\n        const startDistance = getDist(startClients);\n        pinch({\n            datas: this.datas,\n            touches: getPositions(clients, prevClients, startClients),\n            scale: distance / startDistance,\n            distance,\n            ...centerPosition,\n            inputEvent: e,\n        });\n    }\n    public onPinchEnd(e: TouchEvent) {\n        if (!this.flag || !this.pinchFlag) {\n            return;\n        }\n        const isPinch = this.isPinch;\n\n        this.isPinch = false;\n        this.pinchFlag = false;\n        const pinchend = this.options.pinchend;\n\n        if (!pinchend) {\n            return;\n        }\n        const prevClients = this.prevClients;\n        const startClients = this.startClients;\n        const centerPosition = getPosition(\n            getAverageClient(prevClients),\n            getAverageClient(prevClients),\n            getAverageClient(startClients),\n        );\n        pinchend({\n            datas: this.datas,\n            isPinch,\n            touches: getPositions(prevClients, prevClients, startClients),\n            ...centerPosition,\n            inputEvent: e,\n        });\n        this.isPinch = false;\n        this.pinchFlag = false;\n    }\n    public unset() {\n        const el = this.el;\n        const container = this.options.container!;\n\n        if (this.isMouse) {\n            removeEvent(el, \"mousedown\", this.onDragStart);\n            removeEvent(container as any, \"mousemove\", this.onDrag);\n            removeEvent(container as any, \"mouseup\", this.onDragEnd);\n        }\n        if (this.isTouch) {\n            removeEvent(el, \"touchstart\", this.onDragStart);\n            removeEvent(container as any, \"touchmove\", this.onDrag);\n            removeEvent(container as any, \"touchend\", this.onDragEnd);\n        }\n    }\n}\n","import Dragger from \"./Dragger\";\nimport { DragOptions } from \"./types\";\n\nexport default function setDrag(el: Element, options: DragOptions) {\n    return new Dragger(el, options);\n}\n","\nimport Dragger from \"./Dragger\";\nimport drag from \"./drag\";\n\n(Dragger as any).drag = drag;\nexport default Dragger;\n"],"names":["getPinchDragPosition","clients","prevClients","startClients","nowCenter","getAverageClient","prevCenter","startCenter","pinchClient","getAddClient","getMinusClient","pinchPrevClient","getPosition","isMultiTouch","e","touches","length","getPositionEvent","getClients","getClient","client","prevClient","startClient","clientX","clientY","prevX","prevY","startX","startY","deltaX","deltaY","distX","distY","getDist","Math","sqrt","pow","getPositions","map","i","min","push","client1","client2","el","options","_this","flag","cancelable","isDrag","pinchFlag","onPinchStart","datas","position","_a","dragstart","preventRightClick","which","inputEvent","preventDefault","onPinch","drag","onPinchEnd","dragend","container","events","isTouch","indexOf","isMouse","addEvent","onDragStart","onDrag","onDragEnd","isPinch","pinchstart","pinchClients","changedTouches","_b","startAverageClient","centerPosition","pinch","distance","startDistance","scale","pinchend","removeEvent","setDrag","Dragger"],"mappings":"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"}