{"version":3,"file":"drag.cjs.js","sources":["../src/utils.ts","../src/Dragger.ts","../src/drag.ts","../src/index.umd.ts"],"sourcesContent":["import { Client, Position } from \"./types\";\nimport { IArrayFormat } from \"@daybrush/utils\";\n\nexport function getPinchDragPosition(\n    clients: Client[],\n    prevClients: Client[],\n    startClients: Client[],\n    startPinchClients: Client[],\n) {\n    const nowCenter = getAverageClient(clients);\n    const prevCenter = getAverageClient(prevClients);\n    const startCenter = getAverageClient(startPinchClients);\n    const pinchClient = getAddClient(startPinchClients[0], getMinusClient(nowCenter, startCenter));\n    const pinchPrevClient = getAddClient(startPinchClients[0], getMinusClient(prevCenter, startCenter));\n\n    return getPosition(pinchClient, pinchPrevClient, startClients[0]);\n}\nexport function isMultiTouch(e: any): e is TouchEvent {\n    return e.touches && e.touches.length >= 2;\n}\nexport function getPositionEvent(e: any): Client[] {\n    if (e.touches) {\n        return getClients(e.touches);\n    } else {\n        return [getClient(e)];\n    }\n}\nexport function getPosition(client: Client, prevClient: Client, startClient: Client): Position {\n    const { clientX, clientY } = client;\n    const {\n        clientX: prevX,\n        clientY: prevY,\n    } = prevClient;\n\n    const {\n        clientX: startX,\n        clientY: startY,\n    } = startClient;\n    const deltaX = clientX - prevX;\n    const deltaY = clientY - prevY;\n    const distX = clientX - startX;\n    const distY = clientY - startY;\n\n    return {\n        clientX,\n        clientY,\n        deltaX,\n        deltaY,\n        distX,\n        distY,\n    };\n}\nexport function getDist(clients: Client[]) {\n    return Math.sqrt(\n        Math.pow(clients[0].clientX - clients[1].clientX, 2)\n        + Math.pow(clients[0].clientY - clients[1].clientY, 2),\n    );\n}\nexport function getPositions(clients: Client[], prevClients: Client[], startClients: Client[]): Position[] {\n    return clients.map((client, i) => getPosition(client, prevClients[i], startClients[i]));\n}\nexport function getClients(touches: IArrayFormat<Touch>) {\n    const length = Math.min(touches.length, 2);\n    const clients = [];\n\n    for (let i = 0; i < length; ++i) {\n        clients.push(getClient(touches[i]));\n    }\n    return clients;\n}\nexport function getClient(e: MouseEvent | Touch): Client {\n    return {\n        clientX: e.clientX,\n        clientY: e.clientY,\n    };\n}\nexport function getAverageClient(clients: Client[]) {\n    return {\n        clientX: (clients[0].clientX + clients[1].clientX) / 2,\n        clientY: (clients[0].clientY + clients[1].clientY) / 2,\n    };\n}\nexport function getAddClient(client1: Client, client2: Client) {\n    return {\n        clientX: (client1.clientX + client2.clientX),\n        clientY: (client1.clientY + client2.clientY),\n    };\n}\n\nexport function getMinusClient(client1: Client, client2: Client) {\n    return {\n        clientX: (client1.clientX - client2.clientX),\n        clientY: (client1.clientY - client2.clientY),\n    };\n}\n","import { DragOptions, Client, Position, OnDrag } from \"./types\";\nimport {\n    getPositionEvent, getPosition, getClients, getPositions,\n    isMultiTouch, getPinchDragPosition, getAverageClient, getDist,\n} from \"./utils\";\nimport { addEvent, removeEvent } from \"@daybrush/utils\";\n\nexport default class Dragger {\n    public options: DragOptions = {};\n    private flag = false;\n    private pinchFlag = false;\n    private datas = {};\n    private isDrag = false;\n    private isPinch = false;\n    private isMouse = false;\n    private isTouch = false;\n    private prevClients: Client[] = [];\n    private startClients: Client[] = [];\n    private movement: number = 0;\n    private startPinchClients: Client[] = [];\n    private startDistance: number = 0;\n    private customDist = [0, 0];\n\n    constructor(private el: Element, options: DragOptions = {}) {\n        this.options = {\n            container: el,\n            preventRightClick: true,\n            pinchThreshold: 0,\n            events: [\"touch\", \"mouse\"],\n            ...options,\n        };\n\n        const { container, events } = this.options;\n\n        this.isTouch = events!.indexOf(\"touch\") > -1;\n        this.isMouse = events!.indexOf(\"mouse\") > -1;\n        this.customDist = [0, 0];\n\n        if (this.isMouse) {\n            addEvent(el, \"mousedown\", this.onDragStart);\n            addEvent(container!, \"mousemove\", this.onDrag);\n            addEvent(container!, \"mouseup\", this.onDragEnd);\n        }\n        if (this.isTouch) {\n            const passive = {\n                passive: false,\n            };\n            addEvent(el, \"touchstart\", this.onDragStart, passive);\n            addEvent(container!, \"touchmove\", this.onDrag, passive);\n            addEvent(container!, \"touchend\", this.onDragEnd, passive);\n        }\n    }\n    public isDragging() {\n        return this.isDrag;\n    }\n    public isPinching() {\n        return this.isPinch;\n    }\n    public scrollBy(deltaX: number, deltaY: number, e: any, isCallDrag: boolean = true) {\n        if (!this.flag) {\n            return;\n        }\n        this.startClients.forEach(client => {\n            client.clientX -= deltaX;\n            client.clientY -= deltaY;\n        });\n        this.prevClients.forEach(client => {\n            client.clientX -= deltaX;\n            client.clientY -= deltaY;\n        });\n        isCallDrag && this.onDrag(e, true);\n    }\n    public onDragStart = (e: any) => {\n        if (!this.flag && e.cancelable === false) {\n            return;\n        }\n        if (isMultiTouch(e)) {\n            if (!this.flag && (e.touches.length !== e.changedTouches.length)) {\n                return;\n            }\n            if (!this.pinchFlag) {\n                this.onPinchStart(e);\n            }\n        }\n        if (this.flag) {\n            return;\n        }\n        const clients = this.startClients[0] ? this.startClients : getPositionEvent(e);\n\n        this.customDist = [0, 0];\n        this.flag = true;\n        this.isDrag = false;\n        this.startClients = clients;\n        this.prevClients = clients;\n        this.datas = {};\n        this.movement = 0;\n\n        const position = getPosition(clients[0], this.prevClients[0], this.startClients[0]);\n\n        const {\n            dragstart,\n            preventRightClick,\n        } = this.options;\n\n        if (\n            (preventRightClick && e.which === 3)\n            || (dragstart && dragstart({\n                datas: this.datas,\n                inputEvent: e,\n                ...position,\n            })) === false) {\n            this.startClients = [];\n            this.prevClients = [];\n            this.flag = false;\n        }\n        this.flag && e.preventDefault();\n    }\n    public onDrag = (e: any, isScroll?: boolean) => {\n        if (!this.flag) {\n            return;\n        }\n        const clients = getPositionEvent(e);\n\n        if (this.pinchFlag) {\n            this.onPinch(e, clients);\n        }\n        const result = this.move([0, 0], e, clients);\n\n        if (!result || (!result.deltaX && !result.deltaY)) {\n            return;\n        }\n        const drag = this.options.drag;\n\n        drag && drag({\n            ...result,\n            isScroll: !!isScroll,\n            inputEvent: e,\n        });\n    }\n    public move([deltaX, deltaY]: number[], inputEvent: any, clients = this.prevClients): OnDrag | undefined {\n        const customDist = this.customDist;\n        const prevClients = this.prevClients;\n        const startClients = this.startClients;\n        const position: Position = this.pinchFlag\n            ? getPinchDragPosition(clients, prevClients, startClients, this.startPinchClients)\n            : getPosition(clients[0], prevClients[0], startClients[0]);\n\n        customDist[0] += deltaX;\n        customDist[1] += deltaY;\n        position.deltaX += deltaX;\n        position.deltaY += deltaY;\n\n        const {\n            deltaX: positionDeltaX,\n            deltaY: positionDeltaY,\n        } = position;\n\n        position.distX += customDist[0];\n        position.distY += customDist[1];\n\n        this.movement += Math.sqrt(positionDeltaX * positionDeltaX + positionDeltaY * positionDeltaY);\n        this.prevClients = clients;\n        this.isDrag = true;\n\n        return {\n            datas: this.datas,\n            ...position,\n            isScroll: false,\n            inputEvent,\n        };\n    }\n    public onDragEnd = (e: any) => {\n        if (!this.flag) {\n            return;\n        }\n        if (this.pinchFlag) {\n            this.onPinchEnd(e);\n        }\n        this.flag = false;\n\n        const dragend = this.options.dragend;\n        const prevClients = this.prevClients;\n        const startClients = this.startClients;\n\n        const position: Position = this.pinchFlag\n            ? getPinchDragPosition(prevClients, prevClients, startClients, this.startPinchClients)\n            : getPosition(prevClients[0], prevClients[0], startClients[0]);\n\n        this.startClients = [];\n        this.prevClients = [];\n        dragend && dragend({\n            datas: this.datas,\n            isDrag: this.isDrag,\n            inputEvent: e,\n            ...position,\n        });\n    }\n    public onPinchStart(e: TouchEvent) {\n        const { pinchstart, pinchThreshold } = this.options;\n\n        if (this.isDrag && this.movement > pinchThreshold!) {\n            return;\n        }\n        const pinchClients = getClients(e.changedTouches);\n\n        this.pinchFlag = true;\n        this.startClients.push(...pinchClients);\n        this.prevClients.push(...pinchClients);\n        this.startDistance = getDist(this.prevClients);\n        this.startPinchClients = [...this.prevClients];\n\n        if (!pinchstart) {\n            return;\n        }\n        const startClients = this.prevClients;\n        const startAverageClient = getAverageClient(startClients);\n        const centerPosition = getPosition(\n            startAverageClient,\n            startAverageClient,\n            startAverageClient,\n        );\n        pinchstart({\n            datas: this.datas,\n            touches: getPositions(startClients, startClients, startClients),\n            ...centerPosition,\n            inputEvent: e,\n        });\n    }\n    public onPinch(e: TouchEvent, clients: Client[]) {\n        if (!this.flag || !this.pinchFlag) {\n            return;\n        }\n        this.isPinch = true;\n\n        const pinch = this.options.pinch;\n        if (!pinch) {\n            return;\n        }\n        const prevClients = this.prevClients;\n        const startClients = this.startClients;\n        const centerPosition = getPosition(\n            getAverageClient(clients),\n            getAverageClient(prevClients),\n            getAverageClient(startClients),\n        );\n        const distance = getDist(clients);\n        pinch({\n            datas: this.datas,\n            touches: getPositions(clients, prevClients, startClients),\n            scale: distance / this.startDistance,\n            distance,\n            ...centerPosition,\n            inputEvent: e,\n        });\n    }\n    public onPinchEnd(e: TouchEvent) {\n        if (!this.flag || !this.pinchFlag) {\n            return;\n        }\n        const isPinch = this.isPinch;\n\n        this.isPinch = false;\n        this.pinchFlag = false;\n        const pinchend = this.options.pinchend;\n\n        if (!pinchend) {\n            return;\n        }\n        const prevClients = this.prevClients;\n        const startClients = this.startClients;\n        const centerPosition = getPosition(\n            getAverageClient(prevClients),\n            getAverageClient(prevClients),\n            getAverageClient(startClients),\n        );\n        pinchend({\n            datas: this.datas,\n            isPinch,\n            touches: getPositions(prevClients, prevClients, startClients),\n            ...centerPosition,\n            inputEvent: e,\n        });\n        this.isPinch = false;\n        this.pinchFlag = false;\n    }\n    public unset() {\n        const el = this.el;\n        const container = this.options.container!;\n\n        if (this.isMouse) {\n            removeEvent(el, \"mousedown\", this.onDragStart);\n            removeEvent(container as any, \"mousemove\", this.onDrag);\n            removeEvent(container as any, \"mouseup\", this.onDragEnd);\n        }\n        if (this.isTouch) {\n            removeEvent(el, \"touchstart\", this.onDragStart);\n            removeEvent(container as any, \"touchmove\", this.onDrag);\n            removeEvent(container as any, \"touchend\", this.onDragEnd);\n        }\n    }\n}\n","import Dragger from \"./Dragger\";\nimport { DragOptions } from \"./types\";\n\nexport default function setDrag(el: Element, options: DragOptions) {\n    return new Dragger(el, options);\n}\n","\nimport Dragger, * as modules from \"./index\";\n\nfor (const name in modules) {\n    (Dragger as any)[name] = (modules as any)[name];\n}\n\nexport default Dragger;\n"],"names":["getPinchDragPosition","clients","prevClients","startClients","startPinchClients","nowCenter","getAverageClient","prevCenter","startCenter","pinchClient","getAddClient","getMinusClient","pinchPrevClient","getPosition","isMultiTouch","e","touches","length","getPositionEvent","getClients","getClient","client","prevClient","startClient","clientX","clientY","prevX","prevY","startX","startY","deltaX","deltaY","distX","distY","getDist","Math","sqrt","pow","getPositions","map","i","min","push","client1","client2","el","options","_this","flag","cancelable","changedTouches","pinchFlag","onPinchStart","customDist","isDrag","datas","movement","position","_a","dragstart","preventRightClick","which","inputEvent","preventDefault","isScroll","onPinch","result","move","drag","onPinchEnd","dragend","container","pinchThreshold","events","isTouch","indexOf","isMouse","addEvent","onDragStart","onDrag","onDragEnd","passive","isPinch","isCallDrag","forEach","positionDeltaX","positionDeltaY","_c","pinchstart","pinchClients","_b","startDistance","startAverageClient","centerPosition","pinch","distance","scale","pinchend","removeEvent","setDrag","Dragger","name","modules"],"mappings":"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"}